// <auto-generated />
using System;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using management_candidates.DataContext;

#nullable disable

namespace management_candidates.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20231221034856_init-database")]
    partial class initdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("management_candidates.Model.Application", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CandidateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("ResourceCode")
                        .HasColumnType("character varying(20)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ResourceCode");

                    b.HasIndex("StatusCode");

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.ApplicationHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ApplicationStatusName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<JsonElement?>("Value")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("application_histories", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Candidate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Availability")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CareerGoals")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<JsonElement?>("Certifications")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<JsonElement?>("Educations")
                        .HasColumnType("jsonb");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ExpectationSalary")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("IdentifyNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastSalary")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("LevelCode")
                        .HasColumnType("text");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("MaritalStatusCode")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("OfficeEmail")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhotoProfile")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PositionCode")
                        .HasColumnType("text");

                    b.Property<string>("ProcessTypeCode")
                        .HasColumnType("text");

                    b.Property<JsonElement?>("Projects")
                        .HasColumnType("jsonb");

                    b.Property<long?>("RecruiterId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecruiterSummary")
                        .HasColumnType("text");

                    b.Property<string>("ReligionCode")
                        .HasColumnType("text");

                    b.Property<string>("Resume")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<JsonElement?>("Skills")
                        .HasColumnType("jsonb");

                    b.Property<string>("SourceCode")
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<long?>("TotalExperience")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("WorkTypeCode")
                        .HasColumnType("text");

                    b.Property<JsonElement?>("Works")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LevelCode");

                    b.HasIndex("MaritalStatusCode");

                    b.HasIndex("OfficeEmail")
                        .IsUnique();

                    b.HasIndex("PositionCode");

                    b.HasIndex("ProcessTypeCode");

                    b.HasIndex("ReligionCode");

                    b.HasIndex("SourceCode");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkTypeCode");

                    b.ToTable("candidates", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccentColor")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_levels", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterMaritalStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_marital_statueses", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_positions", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterPriority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_priorities", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterProcessType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_process_types", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterReligion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_religions", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_sources", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccentColor")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_statuses", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.MasterWorkType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Sequence")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("master_work_types", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Opportunity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientCode")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PicEmail")
                        .HasColumnType("text");

                    b.Property<string>("PicName")
                        .HasColumnType("text");

                    b.Property<string>("PicPhone")
                        .HasColumnType("text");

                    b.Property<string>("PriorityCode")
                        .HasColumnType("text");

                    b.Property<bool?>("PsaApproval")
                        .HasColumnType("boolean");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<long?>("SalesId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientCode");

                    b.HasIndex("PriorityCode");

                    b.HasIndex("SalesId");

                    b.ToTable("opportunities", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<long?>("Ctc")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Level")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("OpportunityCode")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short?>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<string>("Requirement")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OpportunityCode");

                    b.ToTable("resources", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Sales", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("sales", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("management_candidates.Model.Application", b =>
                {
                    b.HasOne("management_candidates.Model.Candidate", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.Resource", "Resource")
                        .WithMany("Applications")
                        .HasForeignKey("ResourceCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterStatus", "MasterStatus")
                        .WithMany("Applications")
                        .HasForeignKey("StatusCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Candidate");

                    b.Navigation("MasterStatus");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("management_candidates.Model.ApplicationHistory", b =>
                {
                    b.HasOne("management_candidates.Model.Application", "Application")
                        .WithMany("ApplicationHistories")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Application");
                });

            modelBuilder.Entity("management_candidates.Model.Candidate", b =>
                {
                    b.HasOne("management_candidates.Model.MasterLevel", "MasterLevel")
                        .WithMany("Candidates")
                        .HasForeignKey("LevelCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterMaritalStatus", "MasterMaritalStatus")
                        .WithMany("Candidates")
                        .HasForeignKey("MaritalStatusCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterPosition", "MasterPosition")
                        .WithMany("Candidates")
                        .HasForeignKey("PositionCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterProcessType", "MasterProcessType")
                        .WithMany("Candidates")
                        .HasForeignKey("ProcessTypeCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterReligion", "MasterReligion")
                        .WithMany("Candidates")
                        .HasForeignKey("ReligionCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterSource", "MasterSource")
                        .WithMany("Candidates")
                        .HasForeignKey("SourceCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.User", null)
                        .WithMany("Candidates")
                        .HasForeignKey("UserId");

                    b.HasOne("management_candidates.Model.MasterWorkType", "MasterWorkType")
                        .WithMany("Candidates")
                        .HasForeignKey("WorkTypeCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MasterLevel");

                    b.Navigation("MasterMaritalStatus");

                    b.Navigation("MasterPosition");

                    b.Navigation("MasterProcessType");

                    b.Navigation("MasterReligion");

                    b.Navigation("MasterSource");

                    b.Navigation("MasterWorkType");
                });

            modelBuilder.Entity("management_candidates.Model.Opportunity", b =>
                {
                    b.HasOne("management_candidates.Model.Client", "Client")
                        .WithMany("Opportunities")
                        .HasForeignKey("ClientCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.MasterPriority", "Priority")
                        .WithMany("Opportunities")
                        .HasForeignKey("PriorityCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("management_candidates.Model.Sales", "Sales")
                        .WithMany("Opportunities")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("Priority");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("management_candidates.Model.Resource", b =>
                {
                    b.HasOne("management_candidates.Model.Opportunity", "Opportunity")
                        .WithMany("Resources")
                        .HasForeignKey("OpportunityCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Opportunity");
                });

            modelBuilder.Entity("management_candidates.Model.Application", b =>
                {
                    b.Navigation("ApplicationHistories");
                });

            modelBuilder.Entity("management_candidates.Model.Candidate", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("management_candidates.Model.Client", b =>
                {
                    b.Navigation("Opportunities");
                });

            modelBuilder.Entity("management_candidates.Model.MasterLevel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterMaritalStatus", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterPosition", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterPriority", b =>
                {
                    b.Navigation("Opportunities");
                });

            modelBuilder.Entity("management_candidates.Model.MasterProcessType", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterReligion", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterSource", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.MasterStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("management_candidates.Model.MasterWorkType", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("management_candidates.Model.Opportunity", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("management_candidates.Model.Resource", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("management_candidates.Model.Sales", b =>
                {
                    b.Navigation("Opportunities");
                });

            modelBuilder.Entity("management_candidates.Model.User", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
